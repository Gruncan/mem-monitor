name: Build and Test Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-mem-monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Build Main Target
        run: |
          cd components/memory-monitor/
          make

      - name: Upload mem_monitor artifact
        uses: actions/upload-artifact@v4
        with:
          name: mem_monitor
          path: components/memory-monitor/mem_monitor

  build-mem-monitor-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential lcov

      - name: Build Test Target
        run: |
          cd components/memory-monitor/
          make test

      - name: Upload mem_monitor_test and coverage files
        uses: actions/upload-artifact@v4
        with:
          name: mem_monitor_test
          path: |
            components/memory-monitor/mem_monitor_test
            components/memory-monitor/src/*.gcno
            components/memory-monitor/tests/*.gcno
            components/memory-monitor/*.gcda


  build-mem-tracker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Build Main Target
        run: |
          cd components/memory-tracker/
          make libdebugprint

      - name: Upload lib_mem_tracker artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_mem_tracker
          path: components/memory-tracker/lib_mem_tracker.so

  build-mem-tracker-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Build Main Target
        run: |
          cd components/memory-tracker/
          make testnoprint

      - name: Upload mem_tracker_test artifact
        uses: actions/upload-artifact@v4
        with:
          name: mem_tracker_test
          path: components/memory-tracker/mem_tracker_test

  format-repo:
    runs-on: ubuntu-latest
    needs: [ build-mem-monitor, build-mem-monitor-test, build-mem-tracker, build-mem-tracker-test ]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential clang-format

      - name: Format Repositories
        run: |
          find . -name "*.cpp" -or -name "*.h" | xargs clang-format -i
          git diff --exit-code --color --unified=0

  run-monitor-tests:
    runs-on: ubuntu-latest
    needs: [build-mem-monitor, build-mem-monitor-test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download mem_monitor_test artifact
        uses: actions/download-artifact@v4
        with:
          name: mem_monitor_test

      - name: Set execute permissions
        run: |
          chmod +x ./mem_monitor_test

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential lcov

      - name: Run Tests
        run: |
          ./mem_monitor_test

      - name: Collect Coverage Data
        run: |
          mv components/memory-monitor/src/*.gcda src/
          mv components/memory-monitor/tests/*.gcda tests/
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Generate HTML Coverage Report
        run: |
          genhtml coverage.info --output-directory coverage-report

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report



  run-tracker-tests:
    runs-on: ubuntu-latest
    needs: [ build-mem-tracker, build-mem-tracker-test ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download lib_mem_tracker artifact
        uses: actions/download-artifact@v4
        with:
          name: lib_mem_tracker

      - name: Download mem_tracker_test artifact
        uses: actions/download-artifact@v4
        with:
          name: mem_tracker_test

      - name: Set execute permissions
        run: |
          chmod +x ./mem_tracker_test

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Run C Tests
        run: |
          # Redirect stderr from LD_PRELOAD debug print to stdout to out.txt
          LD_PRELOAD=./lib_mem_tracker.so ./mem_tracker_test > out.txt 2>&1

      - name: Upload test output file
        uses: actions/upload-artifact@v4
        with:
          name: c-test-output-file
          path: | 
            memory_tracker1.tmtc
            out.txt

  build-mtc-decoder-lib:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Build Main Target
        run: |
          cd components/common/mtc
          make

      - name: Upload libmtc_decoder.a artifact
        uses: actions/upload-artifact@v4
        with:
          name: libmtc_decoder
          path: components/common/mtc/libmtc_decoder.a

  build-mtc-decoder-lib-test:
    runs-on: ubuntu-latest
    needs: [ build-mtc-decoder-lib ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential
          
      - name: Download libmtc_decoder.a  artifact
        uses: actions/download-artifact@v4
        with:
          name: libmtc_decoder

      - name: Build Main Target
        run: |
          mv libmtc_decoder.a components/common/mtc
          cd components/common/mtc
          make test

      - name: Upload mtc_tests artifact
        uses: actions/upload-artifact@v4
        with:
          name: mtc_tests
          path: components/common/mtc/mtc_tests

  test-mtc-decoder-output:
    runs-on: ubuntu-latest
    needs: [ build-mtc-decoder-lib-test, run-tracker-tests]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Download dependant artifacts
        uses: actions/download-artifact@v4
        with:
          name: |
            mtc_tests
            c-test-output-file

      - name: Move artifacts
        run: |
          chmod +x ./mtc_tests
          mv ./mtc_tests scripts/decode-test/
          mv out.txt scripts/decode-test/
          mv memory_tracker1.tmtc scripts/decode-test/

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/decode-test/requirements.txt

      - name: Run PyTests
        run: |
          cd scripts/decode-test/
          pytest test-output.py
            

