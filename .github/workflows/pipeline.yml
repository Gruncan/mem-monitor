name: Build and Test Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Build Main Target
        run: |
          make

      - name: Upload mem_monitor artifact
        uses: actions/upload-artifact@v3
        with:
          name: mem_monitor
          path: ./mem_monitor

  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential

      - name: Build Test Target
        run: |
          make test

      - name: Upload mem_monitor_test and coverage files
        uses: actions/upload-artifact@v3
        with:
          name: mem_monitor_test
          path: |
            ./mem_monitor_test
            ./source/*.gcno
            ./tests/*.gcno
            ./*.gcda


  run-tests:
    runs-on: ubuntu-latest
    needs: [build-main, build-test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download mem_monitor_test artifact
        uses: actions/download-artifact@v3
        with:
          name: mem_monitor_test

      - name: Set execute permissions
        run: |
          chmod +x ./mem_monitor_test

      - name: Setup Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential lcov tzdata
          sudo timedatectl set-timezone Europe/London

      - name: Run Tests
        run: |
          ./mem_monitor_test

      - name: Collect Coverage Data
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Generate HTML Coverage Report
        run: |
          genhtml coverage.info --output-directory coverage-report

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage-report